// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  hash     String @unique @db.VarChar(256)
  username String @unique @db.VarChar(150)

  @@map("token")
}

model Guardian {
  id         Int      @id @default(autoincrement())
  cpf        String   @unique @db.VarChar(14)
  name       String   @db.VarChar(150)
  number     String?  @db.VarChar(10)
  address    String?  @db.VarChar(150)
  district   String?  @db.VarChar(150)
  city       String?  @db.VarChar(150)
  state      String?  @db.VarChar(150)
  email      String   @unique @db.VarChar(150)
  telephone  String   @db.VarChar(45)
  cep        String?  @db.VarChar(9)
  password   String   @db.VarChar(255)
  signUpDate DateTime @default(now())
  Pet        Pet[]

  @@map("guadian")
}

model BloodCenter {
  id          Int           @id @default(autoincrement())
  cnpj        String        @unique @db.VarChar(18)
  name        String        @db.VarChar(150)
  number      String?       @db.VarChar(10)
  address     String?       @db.VarChar(150)
  district    String?       @db.VarChar(150)
  city        String?       @db.VarChar(150)
  state       String?       @db.VarChar(150)
  email       String        @unique @db.VarChar(150)
  telephone   String        @db.VarChar(45)
  cep         String?       @db.VarChar(9)
  password    String        @db.VarChar(255)
  signUpDate  DateTime      @default(now())
  Appointment Appointment[]
  Alert       Alert[]

  @@map("bloodCenter")
}

model Pet {
  id               Int           @id @default(autoincrement())
  guardian         Guardian      @relation(fields: [guardianId], references: [id])
  guardianId       Int
  name             String        @db.VarChar(150)
  species          Species
  statusToDonation Status?
  sexOfPet         Sex
  age              String?       @db.VarChar(2)
  bloodType        String?       @db.VarChar(150)
  weight           String?       @db.VarChar(5)
  breed            String?       @db.VarChar(150)
  Appointment      Appointment[]

  @@map("pet")
}

model Alert {
  id            Int         @id @default(autoincrement())
  data          DateTime    @default(now())
  bloodCenter   BloodCenter @relation(fields: [bloodCenterId], references: [id])
  bloodCenterId Int
  species          Species
  bloodType     String      @db.VarChar(150)

  @@map("alert")
}

model Appointment {
  id            Int         @id @default(autoincrement())
  data          DateTime    @default(now())
  type          String      @db.VarChar(150)
  result        String?     @db.VarChar()
  pet           Pet         @relation(fields: [petId], references: [id])
  petId         Int
  bloodCenter   BloodCenter @relation(fields: [bloodCenterId], references: [id])
  bloodCenterId Int
  @@map("appointment")
}

enum Sex {
  FEMALE
  MALE
}

enum Status {
  FIT
  UNFIT
}

enum Species {
  CAT
  DOG
}
